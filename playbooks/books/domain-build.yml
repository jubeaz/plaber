---
- name: ROOT DC BUILD
  hosts: root_dc
  max_fail_percentage: 0
  tags: 'domain_build_root'
  gather_facts: false
  tasks:
    - name: Build root domains
      ansible.builtin.include_role:
        name: windows_domain_build_root
      when: not ansible_windows_domain_member

    - name: Rename default site
      ansible.builtin.include_role:
        name: windows_domain_cfg_default_site
      when: not ansible_windows_domain_member

    - name: Add root domain subnets
      ansible.builtin.include_role:
        name: windows_domain_cfg_subnet
      when: not ansible_windows_domain_member

    - name: Set NTP
      ansible.builtin.include_role:
        name: windows_cfg_ntp
      when: not ansible_windows_domain_member

    - name: Register ansible_windows_domain_member for cache
      ansible.builtin.set_fact:
        ansible_windows_domain_member: true
        cacheable: true
      when: not ansible_windows_domain_member

  vars:
    wd_build_root_two_adapters: "{{ plbr_two_adapters }}"
    wd_build_root_pub_adapter: "{{ plbr_pub_adapter }}"
    wd_build_root_domain_adapter: "{{ plbr_domain_adapter }}"
    wd_build_root_domain_netbios_name: "{{ plbr_domain_netbios_name }}"
    wd_build_root_domain_name: "{{ plbr_domain_name }}"
    wd_build_root_domain_password: "{{ plbr_domain_password }}"
    wd_build_root_domain_ip: "{{ plbr_domain_ip }}"
    wd_cfg_site_name: "{{ plbr_domain_default_first_site_name }}"
    wd_cfg_site_domain_name: "{{ plbr_domain_name }}"
    wd_cfg_site_domain_password: "{{ plbr_domain_password }}"
    wd_cfg_subnet_subnets: "{{ plbr_domain_subnets }}"
    wd_cfg_subnet_site_name: "{{ plbr_domain_default_first_site_name }}"
    wd_cfg_subnet_domain_name: "{{ plbr_domain_name }}"
    wd_cfg_subnet_domain_password: "{{ plbr_domain_password }}"
    w_cfg_ntp_servers: "{{ plbr_ntp_servers }}"

- name: CHILD DC BUILD
  hosts: child_dc
  gather_facts: false
  max_fail_percentage: 0
  tags: 'domain_build_children'
  tasks:
    - name: Build child domains
      ansible.builtin.include_role:
        name: windows_domain_build_child
      when: not ansible_windows_domain_member

    - name: Create DNS conditional forwarder to root domain
      ansible.builtin.include_role:
        name: windows_domain_dns_cond_forwarder
      vars:
        windows_domain_dns_cond_forwarder_master_server: "{{ plbr_domain_parent_dc_ip }}"
        windows_domain_dns_cond_forwarder_zone: "{{ plbr_domain_parent_domain_name }}"
        windows_domain_dns_cond_forwarder_replication: "none"
        windows_domain_dns_cond_forwarder_domain_name: "{{ plbr_domain_name }}"
        windows_domain_dns_cond_forwarder_domain_password: "{{ plbr_domain_password }}"
      when: not ansible_windows_domain_member

    - name: Set NTP
      ansible.builtin.include_role:
        name: windows_cfg_ntp
      when: not ansible_windows_domain_member

    - name: Register ansible_windows_domain_member for cache
      ansible.builtin.set_fact:
        ansible_windows_domain_member: true
        cacheable: true
      when: not ansible_windows_domain_member
  vars:
    wd_build_child_two_adapters: "{{ plbr_two_adapters }}"
    wd_build_child_pub_adapter: "{{ plbr_pub_adapter }}"
    wd_build_child_domain_adapter: "{{ plbr_domain_adapter }}"
    wd_build_child_parent_dc_ip: "{{ plbr_domain_parent_dc_ip }}"
    wd_build_child_parent_domain_password: "{{ plbr_domain_parent_domain_password }}"
    wd_build_child_domain_password: "{{ plbr_domain_password }}"
    wd_build_child_parent_domain_name: "{{ plbr_domain_parent_domain_name }}"
    wd_build_child_parent_dc_name: "{{ plbr_domain_parent_dc_name }}"
    wd_build_child_netbios_name: "{{ plbr_domain_netbios_name }}"
    wd_build_child_site_name: "{{ plbr_default_first_site_name }}"
    w_cfg_ntp_servers: "{{ plbr_ntp_servers }}"

- name: DC ADD DNS CONFIGURATION
  hosts: dc
  max_fail_percentage: 0
  gather_facts: false
  tags: 'domain_cfg_dns'
  tasks:
#    - name: Configure DNS delegation
#      ansible.builtin.include_role:
#        name: windows_domain_dns_delegation
#      vars:
#        windows_domain_dns_delegation_domain: "{{ plbr_domain_name }}"
#        windows_domain_dns_delegation_server_fqdn: "{{ item[1] | lower }}.{{ item[2] }}"
#        windows_domain_dns_delegation_server_ip: "{{ item[3] }}"
#        windows_domain_dns_delegation_zone: "{{ item[2] }}"
#      loop: "{{ plbr_child_domains }}"
#      when: plbr_child_domains is defined

    - name: Configure DNS conditional forwarder to children
      ansible.builtin.include_role:
        name: windows_domain_dns_cond_forwarder
      vars:
        windows_domain_dns_cond_forwarder_domain_name: "{{ plbr_domain_name }}"
        windows_domain_dns_cond_forwarder_domain_password: "{{ plbr_domain_password }}"
        windows_domain_dns_cond_forwarder_replication: "none"
        windows_domain_dns_cond_forwarder_master_server: "{{ item[3] }}"
        windows_domain_dns_cond_forwarder_zone: "{{ item[2] }}"
      loop: "{{ plbr_child_domains }}"
      when: plbr_child_domains is defined

    - name: "Adjust DNS Server"
      ansible.builtin.include_role:
        name: windows_domain_dns_listening
      vars:
        windows_domain_dns_listening_domain_dc_ip: "{{ plbr_domain_dc_ip }}"
        windows_domain_dns_listening_domain_name: "{{ plbr_domain_dc_name }}"
        windows_domain_dns_listening_domain_password: "{{ plbr_domain_password }}"
        windows_domain_dns_listening_two_adapters: "{{ plbr_two_adapters }}"
