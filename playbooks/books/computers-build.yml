---
- name: BUILD ALL COMPUTERS
  hosts: domain
  max_fail_percentage: 0
  tags: 'build_computers_setup_1'
#  roles:
#    - { role: 'windows_settings_base_setup', tags: 'base_setup'}
##    - { role: 'windows_settings_keyboard', tags: 'windows_keyboard'}
#    - { role: 'windows_settings_update_planning', tags: 'update_planning', when: windows_update | default(true) == true}
#    - { role: 'windows_settings_updates', tags: 'updates', when: windows_update | default(true) == true}
#    - { role: 'windows_settings_admin_password', tags: 'admin_password'}
#    - { role: 'windows_settings_hostname', tags: 'hostname'}
#  vars:
#    http_proxy: "{{ enable_http_proxy }}"
#    layout: "fr-FR"
  tasks:
    - name: Base setup
      ansible.builtin.include_role:
        name: "windows_settings_base_setup"
      vars:
        http_proxy: "{{ enable_http_proxy }}"
      when: hostvars[inventory_hostname]["ansible_facts"]["hostname"] != hostname
    - name: Keyboars setup
      ansible.builtin.include_role:
        name: "windows_settings_keyboard"
      vars:
        layout: "fr-FR"
      when: hostvars[inventory_hostname]["ansible_facts"]["hostname"] != hostname
    - name: Update planning setup
      ansible.builtin.include_role:
        name: "windows_settings_update_planning"
      when: hostvars[inventory_hostname]["ansible_facts"]["hostname"] != hostname
    - name: Update setup
      ansible.builtin.include_role:
        name: "windows_settings_updates"
      when: hostvars[inventory_hostname]["ansible_facts"]["hostname"] != hostname
    - name: Admin password setup
      ansible.builtin.include_role:
        name: "windows_settings_admin_password"
      when: hostvars[inventory_hostname]["ansible_facts"]["hostname"] != hostname
    - name: Hostname setup
      ansible.builtin.include_role:
        name: "windows_settings_hostname"
      when: hostvars[inventory_hostname]["ansible_facts"]["hostname"] != hostname
