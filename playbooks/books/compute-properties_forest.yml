---
- name: "Compute FOREST info on each host"
  hosts: dc
  max_fail_percentage: 0
  gather_facts: false
  tasks:
    - name: Compute multi_domain_forest default value (false)
      ansible.builtin.set_fact:
        multi_domain_forest: false

    - name: Compute parent domain name on chid DC
      ansible.builtin.set_fact:
        domain_parent_domain_name: "{{ '.'.join(domain_name.split('.')[1:]) }}"
        cacheable: true
      when: dc_level != 0

    - name: Compute parent domain infos on chid DC
      ansible.builtin.set_fact:
        multi_domain_forest: true
        domain_parent_domain_password: "{{ hostvars[parent_domain_dc_ansible_inventory_key].domain_password }}"
        domain_parent_dc_name: "{{ hostvars[parent_domain_dc_ansible_inventory_key].hostname }}"
        domain_parent_dc_ip: "{{ hostvars[parent_domain_dc_ansible_inventory_key].domain_ip }}"
        domain_parent_domain_name: "{{ hostvars[parent_domain_dc_ansible_inventory_key].domain_name }}"
        cacheable: true
      when: dc_level != 0

    - name: Print parent domain info
      ansible.builtin.debug:
        msg:
          - "domain_parent_domain_name: {{ domain_parent_domain_name }}"
          - "domain_parent_domain_password: {{ domain_parent_domain_password }}"
          - "domain_parent_dc_name: {{ domain_parent_dc_name }}"
          - "domain_parent_dc_ip: {{ domain_parent_dc_ip }}"
      when: dc_level != 0

    - name: Compute child domain names on parent DC
      no_log: true
      ansible.builtin.set_fact:
        child_domains: "{{ child_domains | default([]) + [[item.key, item.value.hostname, item.value.domain_name]] }}"
      with_dict: "{{ hostvars }}"
      when: item.value.domain_parent_domain_name is defined and domain_name == item.value.domain_parent_domain_name

    - name: Compute multi_domain_forest on parent DC
      #no_log: true
      ansible.builtin.set_fact:
        multi_domain_forest: true
      when: child_domains is defined

#    - name: Print multi_domain_forest
#      ansible.builtin.debug:
#        var: multi_domain_forest
#
#    - name: Print child_domains
#      ansible.builtin.debug:
#        msg:
#          - "{{ item[1] }}.{{ item[2] }}"
#          - "{{ hostvars[item[0]].ansible_host }}"
#      loop: "{{ child_domains }}"
#      when: child_domains is defined