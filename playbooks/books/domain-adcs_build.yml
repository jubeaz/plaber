---
- name: BUILD ADCS
  hosts: adcs
  gather_facts: false
  max_fail_percentage: 0
  roles:
    - { role: 'windows_domain_adcs_ca', tags: 'adcs'}
  vars:
    wd_adcs_ca_domain_name: "{{ plbr_domain_name }}"
    wd_adcs_ca_domain_password: "{{ plbr_domain_password }}"
    wd_adcs_ca_ca_common_name: "{{ plbr_ca_common_name }}"
    wd_adcs_ca_web_enrollment: "{{ plbr_web_enrollment }}"

- name: CONFIG ADCS
  hosts: adcs
  gather_facts: false
  max_fail_percentage: 0
  roles:
    - { role: 'windows_domain_adcs_templates', tags: 'adcs_templates', when: plbr_cert_templates is defined and plbr_cert_templates|length > 0}
  vars:
    wd_adcs_template_domain_name: "{{ plbr_domain_name }}"
    wd_adcs_template_domain_password: "{{ plbr_domain_password }}"
    wd_adcs_template_cert_templates: "{{ plbr_cert_templates }}"
    wd_adcs_template_ca_common_name: "{{ plbr_ca_common_name }}"
    wd_adcs_template_hostname: "{{ plbr_hostname }}"

- name: GET BACK TLS SERVER TEMPLATE OID
  hosts: adcs
  max_fail_percentage: 0
  gather_facts: false
  tasks:
    - name: Block
      when: plbr_tls_server_certificate_template_name is defined and plbr_tls_server_certificate_template_name != ""
      block:
        - name: Get TSL Server Template OID
          ansible.windows.win_powershell:
            script: |
              [CmdletBinding()]
              param (
                  [String]
                  $TemplateName
              )
              $Ansible.Failed = $false
              $Ansible.Changed = $false

              $template = Get-CATemplate | where {$_.name -match $TemplateName}
              $Ansible.Result = $template.OID
            parameters:
              TemplateName: "{{ plbr_tls_server_certificate_template_name }}"
          register: template_oid_result

        - name: Register plbr_tls_server_certificate_template_oid
          ansible.builtin.set_fact:
            plbr_tls_server_certificate_template_oid: "{{ template_oid_result.result }}"
            cacheable: true
