---
- name: TRUST SET FACTS
  hosts: trust
  tags: mandatory
  gather_facts: false
  max_fail_percentage: 0
  tasks:
    - name: Register trusted domain infos on DC
      ansible.builtin.set_fact:
        plbr_domain_trust_remote_dc_name: "{{ hostvars[plbr_trust_domain_dc_inventory_key].plbr_hostname }}"
        plbr_domain_trust_remote_dc_ip: "{{ hostvars[plbr_trust_domain_dc_inventory_key].plbr_domain_ip }}"
        plbr_domain_trust_remote_domain_name: "{{ hostvars[plbr_trust_domain_dc_inventory_key].plbr_domain_name }}"
        plbr_domain_trust_remote_domain_password: "{{ hostvars[plbr_trust_domain_dc_inventory_key].plbr_domain_password }}"
        cacheable: true

    - name: Print trused domain info
      ansible.builtin.debug:
        msg:
          - "plbr_domain_trust_remote_dc_name: {{ plbr_domain_trust_remote_dc_name }}"
          - "plbr_domain_trust_remote_dc_ip: {{ plbr_domain_trust_remote_dc_ip }}"
          - "plbr_domain_trust_remote_domain_name: {{ plbr_domain_trust_remote_domain_name }}"
          - "plbr_domain_trust_remote_domain_password: {{ plbr_domain_trust_remote_domain_password }}"
          - "plbr_domain_name: {{ plbr_domain_name }}"

    - name: Register transitive trusted domains info
      no_log: true
      ansible.builtin.set_fact:
        plbr_domain_trust_transitive_domains: "{{ plbr_domain_trust_transitive_domains | default([]) + [[item.value.plbr_domain_ip, item.value.plbr_domain_name]] }}"
#        cacheable: true
      with_dict: "{{ hostvars }}"
# is a DC and not the domain itself and not the trusted domain and not a subdomain of itself an 
      when: item.value.plbr_multi_domain_forest is defined
        and item.value.plbr_domain_name != plbr_domain_name
        and item.value.plbr_domain_name != plbr_domain_trust_remote_domain_name
        and '.'.join(item.value.plbr_domain_name.split('.')[1:]) != plbr_domain_name
        and item.value.plbr_domain_name != '.'.join(plbr_domain_name.split('.')[1:])

    - name: Print transitive_trusts_domains
      ansible.builtin.debug:
        msg:
          - "{{ item[1] }}"
          - "{{ item[0] }}"
      loop: "{{ plbr_domain_trust_transitive_domains }}"
      when: plbr_domain_trust_transitive_domains is defined


# - name: "COMPUTE CFGMGR ON DC"
#   hosts: dc
#   tags: mandatory
#   max_fail_percentage: 0
#   gather_facts: no
#   tasks:
#     - name:
#       no_log: true
#       ansible.builtin.set_fact:
#         transitive_trusts_domains: "{{ transitive_trusts_domains | default([]) + [[ item.key, item.value.domain_name ]]  }}"
#       with_dict: "{{  hostvars  }}"
#       when: item.value.domain_name is defined and
#         item.value.domain_name != domain_name
#         and item.value.domain_name != domain_trust_remote_domain_name
#         and '.'.join(item.value.domain_name.split('.')[1:]) != domain_name
#         and item.value.domain_name != '.'.join(domain_name.split('.')[1:])
